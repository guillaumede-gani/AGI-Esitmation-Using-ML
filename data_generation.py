 # -*- coding: utf-8 -*-
"""
Created on Thu Aug 18 13:27:08 2022

@author: gui_m
"""
import csv  
from scipy.interpolate import UnivariateSpline
from numpy import diff
import numpy as np
from matplotlib import pyplot as plt
from scipy.signal import savgol_filter
from scipy.signal import butter
from scipy.signal import find_peaks
import scipy.signal as signal
import pandas as pd
import math
from sklearn.preprocessing import normalize
from scipy.signal import lfilter
from scipy.interpolate import interp1d
from scipy.interpolate import make_interp_spline, BSpline
from scipy.interpolate import splrep, splev
from scipy import interpolate

def calculateAGI(derivatedWave):
    test_min = signal.argrelextrema(derivatedWave,np.less_equal,order=15)
    test_max = signal.argrelextrema(derivatedWave,np.greater_equal,order=15)
    if(len(test_min[0]) >1 and len(test_max[0]) > 2):
        a = derivatedWave[test_max[0][0]]
        b = derivatedWave[test_min[0][1]]
        c = derivatedWave[test_max[0][1]]
        d = derivatedWave[test_min[0][2]]
        e = derivatedWave[test_max[0][2]]
        
        return (b-c-d-e)/a
    else:
        return 0

def calculateAGIPostion(derivatedWave):
    test_min = signal.argrelextrema(derivatedWave,np.less_equal,order=15)
    test_max = signal.argrelextrema(derivatedWave,np.greater_equal,order=15)
    a = test_max[0][0]
    b = test_min[0][1]
    c = test_max[0][1]
    d = test_min[0][2]
    e = test_max[0][2]
    return [a,b,c,d,e]
dataSimulated = pd.read_csv("D:\\Users\\Guillaume\\Desktop\\LD_Teck\\DataCleaning\\data\\PWs_Digital_PPG.csv")  
row_1=dataSimulated.iloc[200]

def DownSample(wave):
    downSamp = []
    xx = []
    for i in range(1,len(wave),10):
        if math.isnan(wave[i]) == False:
            downSamp.append(wave[i])
            xx.append(i)
    return downSamp,xx
    
plt.figure(figsize=(3, 6), dpi=80)

wave,xx = DownSample(row_1)
plt.plot(xx,wave)


def normalize_list(list_normal):
    max_value = max(list_normal)
    min_value = min(list_normal)
    for i in range(len(list_normal)):
        list_normal[i] = (list_normal[i])/ (max_value)
    return list_normal



def getSigneChange(wave,end,start=0):
    list_of_zeroes = []
    if(end<0):
        newEnd = len(wave) - 1
    else:
        newEnd = end
    cutWave = wave[start:newEnd]
    j=0
    for i in range(0,len(cutWave)-5):
        if cutWave[i]*cutWave[i+1] <=0:
            if(len(list_of_zeroes) == 0):    
                list_of_zeroes.append(i+start+1)
            else:
                if (list_of_zeroes[j] + 5 >= i+start+1):
                    continue
                else:
                    list_of_zeroes.append(i+start+1)
                    j += 1
                    
    return list_of_zeroes

def calculateAGIFromList(fiducials):
    agis = []
    for fiducial in fiducials:
        agi = (fiducial[1]-fiducial[2]-fiducial[3]-fiducial[4])/fiducial[0]
        agis.append(agi)
    return agis
    
    
    
def calculateAllAGI(data):
    list_agi = []
    list_fiducials = []
    for i in range(0,112):
        waves = data[i]
        SD = normalize_list(np.gradient(np.gradient(waves[1:],1),1))
        thirsD = normalize_list(np.gradient(SD,10))
        list_agi.append(calculateAGI(SD))
        yy = normalize_list(thirsD)
        yy = [x for x in yy if math.isnan(x) == False]
        xx= np.arange(0,len(yy))
        f = splrep(xx, yy, k=5, s=0.05)
        zeroes = getSigneChange(splev(xx,f),len(yy))
        if(len(zeroes) < 5):
            print(zeroes)
            print("Error on %i : " % i)
        else:    
            list_fiducials.append(SD[zeroes])
    return list_agi,list_fiducials

# agis,fiducials = calculateAllAGI(dataSimulated.iloc)
# agis_good = calculateAGIFromList(fiducials)

def getSigneChangeWithMargin(wave,margin,end,start=0):
    list_of_zeroes = []
    if(end<0):
        newEnd = len(wave) - 1
    else:
        newEnd = end
    cutWave = wave[start:newEnd]
    i = 20
    j = len(cutWave)-5
    list_of_d = []
    list_of_c = []

    while i != j and i <= j:
        if cutWave[i]*(cutWave[i+1]-margin)<=0 and cutWave[i] >= cutWave[i+1]:
            list_of_c.append(i+start+1)
        if cutWave[j]*(cutWave[j-1]-margin)<=0 and cutWave[j] >= cutWave[j-1]:
            list_of_d.append(j+start+1)
        i += 1
        j -= 1
    if len(list_of_c) > 0 and len(list_of_d) > 0:   
        return [list_of_c[0],list_of_d[0]]
    else:
        return []


def getFiducials(wave):
    FirD = normalize_list(np.gradient(wave[1:],1))
    SecD = normalize_list(np.gradient(np.gradient(wave[1:],1),1))
    secDList = SecD.tolist()
    secDListNoNans = [x for x in secDList if math.isnan(x) == False]
    firsDList = FirD.tolist()
    firsDListNoNans = [x for x in firsDList if math.isnan(x) == False]
    firsDList = firsDListNoNans[:-100]
    FD_min = firsDList.index(min(firsDList))
    e_max_mindex = firsDList[FD_min:].index(max(firsDList[FD_min:])) + FD_min
    secDList = secDListNoNans[:-150]
    a_index = secDList.index(max(SecD))
    b_index = secDList.index(min(SecD))
    #e_index = np.argmax(SecD[b_index:-150]) + b_index
    e_index = secDList.index(max(secDList[b_index:e_max_mindex]))
    xx= np.arange(0,len(secDList))
    ThirdD_Nan = normalize_list(np.gradient(SecD,1))
    ThirdD_Not_Cut = [x for x in ThirdD_Nan if math.isnan(x) == False]
    xx= np.arange(0,len(ThirdD_Not_Cut))
    f = splrep(xx, ThirdD_Not_Cut, k=5, s=0.05)
    zeroes = getSigneChange(splev(xx,f),e_index,b_index)
    if(len(zeroes) > 2):
        c_index = zeroes[0]
        d_index = zeroes[-1]
    elif(len(zeroes) == 2):
        c_index = zeroes[0]
        d_index = zeroes[1]
    else:
        if(e_index > b_index):
            zeroes_with_margins = getSigneChangeWithMargin(splev(xx,f),0.05,e_index,b_index)
            if( len(zeroes_with_margins) >=2):
                # plt.plot(SecD[:-200])
                # plt.plot(splev(xx,f)[:-200])
                # plt.plot(FirD[:-200])
                # plt.axhline(y=0)
                c_index = zeroes_with_margins[0]
                d_index = zeroes_with_margins[-1]
                xx= np.arange(0,len(SecD[:-150])) 
                return [a_index,b_index,c_index,d_index,e_index]
            else: 
                xx= np.arange(0,len(FirD))
                # plt.plot(SecD[:-200])
                # plt.plot(splev(xx,f)[:-200])
                zeroes_wholeWave = getSigneChange(splev(xx,f),len(splev(xx,f)[:-200]))
                if(len(zeroes_wholeWave) >= 5):
                    if(SecD[zeroes_wholeWave[4]] >=0):
                        a_index = zeroes_wholeWave[0]
                        b_index = zeroes_wholeWave[1]
                        c_index = zeroes_wholeWave[2]
                        d_index = zeroes_wholeWave[3]
                        e_index = zeroes_wholeWave[4]
                        return [a_index,b_index,c_index,d_index,e_index]
                    else:
                        a_index = xx[zeroes_wholeWave[0]]
                        b_index = xx[zeroes_wholeWave[1]]
                        d_index = secDList[b_index:].index(min(secDList[b_index:])) + b_index
                        e_index = secDList[b_index:].index(max(secDList[b_index:])) + b_index
                        c_index = secDList[b_index:].index(max(secDList[b_index:d_index])) + b_index
                        if(b_index + 10 > c_index):
                            return -3
                        return  [a_index,b_index,c_index,d_index,e_index]                       
                else:
                    return -1
        else:
            e_index = np.argmax(SecD[b_index:-200]) + b_index
            xx= np.arange(0,len(FirD))
            zeroes_with_margins = getSigneChange(splev(xx,f),e_index,b_index)
            if( len(zeroes_with_margins) >=2):
                xx= np.arange(0,len(FirD))
                c_index = zeroes_with_margins[0]
                d_index = zeroes_with_margins[-1]
                if(b_index + 10 > c_index):
                  test_max = signal.argrelextrema(SecD[b_index:e_index-10],np.greater_equal,order=10)
                  c_index = test_max[0][0]+b_index
                  d_index = np.argmin(SecD[c_index:e_index]) + c_index 
                  return [a_index,b_index,c_index,d_index,e_index]
                else:
                    return [a_index,b_index,c_index,d_index,e_index]
            else:     
                return -3
    if(b_index + 10 < c_index):        
        return [a_index,b_index,c_index,d_index,e_index]
    else:
        c_index = secDList[b_index:].index(max(secDList[b_index:d_index])) + b_index
        return [a_index,b_index,c_index,d_index,e_index]
        
        

# def showWaveAGIS(index,waves=dataSimulated.iloc,agis=agis,fiducials=fiducials,agis_good=agis_good):
#     wave = waves[index]
#     SD = normalize_list(np.gradient(np.gradient(wave[1:],1),1))
#     value = fiducials[index]
#     thirsD = normalize_list(np.gradient(SD,10))
#     yy = normalize_list(thirsD)
#     yy = [x for x in yy if math.isnan(x) == False]
#     xx= np.arange(0,len(yy))
#     f = splrep(xx, yy, k=5, s=0.05)
#     zeroes = getSigneChange(splev(xx,f))
#     plt.plot(wave[1:])
#     plt.plot(SD)
#     plt.scatter(zeroes[0], value[0], c="red",zorder=2,label ='a')
#     plt.scatter(zeroes[1], value[1], c="green",zorder=2,label ='b')
#     plt.scatter(zeroes[2], value[2], c="blue",zorder=2,label ='c')
#     plt.axhline(y=0)
#     plt.text(150, 0.8, r'Agi_ex is %.3f' % agis[index])
#     plt.text(150, 0.9, r'Agi_3D is %.3f' % agis_good[index])
#     plt.scatter(zeroes[3], value[3], c="purple",zorder=2,label ='d')
#     plt.scatter(zeroes[4], value[4], c="black",zorder=2,label ='e')
#     plt.axis('off')
#     plt.show()



def tryToFindAgis(listOfWaves):
    listOfFiducials = []
    for i in range(4000):
        zeroes = getFiducials(listOfWaves[i])
        if(zeroes == -1):
            print("Error on wave %i : " % i)
        elif (zeroes ==-2):
            print("Error b and e %i : " % i)
        elif (zeroes == 1):
            print("using zeroes fixed it %i : " % i)
        elif zeroes == -3:
            print("notSolved Now")
        else:
            listOfFiducials.append(zeroes)
    return listOfFiducials

            

            


listOfFiducials = tryToFindAgis(dataSimulated.iloc)

def showResultsWave(wave,fiducial):
    zeroes = fiducial
    plt.figure(figsize=(3, 6), dpi=80)
    SD = normalize_list(np.gradient(np.gradient(wave[1:],1),1))
    value = SD[zeroes]
    agi = (value[1]-value[2]-value[3]-value[4])/value[0] 
    plt.plot(SD[:-50])
    plt.plot(normalize_list(wave[1:-50]))
    plt.scatter(zeroes[0], SD[zeroes[0]], c="red",zorder=2,label ='a')
    plt.scatter(zeroes[1], SD[zeroes[1]], c="green",zorder=2,label ='b')
    plt.scatter(zeroes[2], SD[zeroes[2]], c="blue",zorder=2,label ='c')
    plt.axhline(y=0)
    plt.text(150, 0.8, r'Agi is %.3f' % agi)
    plt.scatter(zeroes[3], SD[zeroes[3]], c="purple",zorder=2,label ='d')
    plt.scatter(zeroes[4], SD[zeroes[4]], c="black",zorder=2,label ='e')
    plt.axis('off')
    plt.show()

"""
for i in range(0,500):
    showResultsWave(dataSimulated.iloc[i],listOfFiducials[i])
"""

import random
def downSampleWave(wave):
    listDownSampledWave = []
    for j in range(10):
        curDownSampleWave = []
        for i in range(1,len(wave)-10,10):
            curDownSampleWave.append(wave[i+j])
        no_nan = np.nan_to_num(curDownSampleWave)
        listDownSampledWave.append(normalize_list(no_nan))
    return listDownSampledWave


def randomDownSampleWave(wave,numWaves):
    listDownSampledWave = []
    for j in range(numWaves):
        curDownSampleWave = []
        for i in range(1,len(wave)-10,10):
            indexRand = random.randint(i, i+10)
            curDownSampleWave.append(wave[indexRand])
        no_nan = np.nan_to_num(curDownSampleWave)
        listDownSampledWave.append(normalize_list(no_nan))
    return listDownSampledWave

def white_noise(rho, sr, n, mu=0):
    sigma = rho * np.sqrt(sr/2)
    noise = np.random.normal(mu, sigma, n)
    return noise






def generateNoisyWaves(wave,numNoise=10,numRandDownSamp=10):
    noisyWaves = []
    rho = 0.0006
    sr = 500
    n = len(wave)
    for i in range(10):
        noise = white_noise(rho, sr, n)
        signal_with_noise = wave + noise
        tryRandomDownSample = randomDownSampleWave(signal_with_noise,20)
        for waves in tryRandomDownSample:
            noisyWaves.append(waves)
    return noisyWaves



header = []
for i in range(1,51):
    header.append("pt%i"% i )
header.append("a")
header.append("b")
header.append("c")
header.append("d")
header.append("e")
header.append("agi")    
    
    
def defineData(data):
    listOfData= []
    for i in range(4374):
        wave = data[i]
        SD = normalize_list(np.gradient(np.gradient(wave[1:],1),1))
        fiducial = getFiducials(wave)
        noisyWavesRandom = generateNoisyWaves(wave)
        simplDownSampledWave = downSampleWave(wave)
        downSampledWave = noisyWavesRandom + simplDownSampledWave
        a = SD[fiducial[0]]
        b = SD[fiducial[1]]
        c = SD[fiducial[2]]
        d = SD[fiducial[3]]
        e = SD[fiducial[4]]
        agi =(b-c-d-e)/a
        for i in range(len(downSampledWave)):
            row = []
            for j in range(len(downSampledWave[i])):
                row.append(downSampledWave[i][j])
            row.append(a)
            row.append(b)
            row.append(c)
            row.append(d)
            row.append(e)
            row.append(agi)
            listOfData.append(row)
    return listOfData

data = defineData(dataSimulated.iloc)
import csv
with open('dsample_noisy_dsample.csv', 'w') as file:
    writer = csv.writer(file)
    writer.writerow(header)
    # Use writerows() not writerow()
    writer.writerows(data)
"""
Testing By Upsampling With spline



test2 = [57,63,68,71,71,70,68,66,62,59,55,52,49,47,45,44,44,43,43,43,43,43,42,41,40,40,38,37,35,33,32,31,29,28,28,27,27,27,27,27,27,27,26,26,26,27,30,34,40,46,53,60,66,70,73,73,72,70,67,63,59,56,52,49,47,45,44,44,44,43,43,43,43,42,41,40,39,37,35,33,32,30,29,28,26,26,25,25,24,24,24,24,24,24,24,24,25,27,31,37,44,52,60,67,72,76,77,76,75,72,69,66,62,59,56,53,51,49,48,48,47,47,47,46,45,44,42,41,40,38,36,35,33,31,30,29,28,27,26,26,26,26,26,25,25,25,25,26,28,33,38,45,53,60,67,72,74,75,74,72,70,66,63,59,56,53,50,48,47,46,46,45,45,45,44,43,42,40,40,38,36,34,33,31,29,28,27,26,25,25,25,24,24,24,24,23,23,23,23,24,26,31,37,43,51,59,65,69,72,72,71,69,66,62,59,55,52,49,47,45,44,43,43,43,42,42,41,41,40,39,37,35,34,32,30,29,27,26,25,24,24,23,23,23,23,23,23,22,22,22,22,24,27,32,38,45,53,60,66,70,72,72,70,68,65,61,57,54,51,48,46,45,44,44,44,44,44,44,43,42,41,40,39,37,35,34,32,31,29,28,27,26,26,25,25,25,25,24,24,24,25,28,32,37,44,52,59,66,70,73,74,73,71,68,65,61,57,54,51,48,46,45,44,43,43,43,42,42,41,40,39,37,36,34,32,30,29,27,26,25,24,23,23,23,23,22,22,22,22,22,22,24,26,31,38,45,53,61,68,73,75,75,74,72,69,66,62,58,55,52,50,48,46,45,45,45,44,44,43,42,41,40,38,36,35,33,31,29,28,27,25,25,24,24,23,23,23,23,23,23,23,23,24,27,32,39,45,54,61,67,71,73,73,72,70,66,63,59,55,52,49,47,45,44,43,42,42,41,41,40,40,39,37,35,33,31,30,28,26,25,23,22,21,21,20,20,20,20,20,20,20,20,19,20,22,27,32,40,47,55,62,67,70,72,71,69,66,63,59,55,52,48,46,44,42,41,41,41,41,41,40,40,39,38,37,35,33,31,29,28,26,25,24,23,22,22,22,22,22,22,22,22,22,22,23,25,29,34,40,48,56,63,68,71,72,71,69,66,63,59,55,51,48,45,43,42,41,41,41,41,41,40,40,39,38,36,34,33,31,29,27,26,24,23,22,21,21,21,21,21,21,21,20,20,20,21,23,27,33,40,48,56,64,69,73,74,74,72,70,66,63,59,56,52,50,47,46,45,44,44,44,43,43,42,41,40,39,37,35,33,31,29,28,26,25,24,23,23,22,22,22,22,22,22,22,21,22,24,27,32,39,46,54,61,67,71,73,73,72,69,66,62,59,55,52,49,47,45,44,43,43,43,42,42,41,40,40,38,37,35,33,31,29,28,26,25,24,23,23,22,22,22,22,22,21,21,21,21,23,26,31,38,44,52,59,64,68,69,69,68,65,62,58,54,51,47,44,42,40,40,40,40,40,39,39,38,38,37,35,34,32,30,29,27,26,24,23,22,21,20,20,20,20,20,20,20,20,21,23,28,33,40,47,55,62,67,70,71,70,68,65,62,58,54,51,48,46,44,43,42,43,43,43,43,42,42,41,40,39,37,35,33,31,29,28,26,25,25,24,24,23,23,23,23,23,25,29,34,40,48,56,63,68,71,72,72,70,67,64,60,57,53,50,47,44,43,42,41,41,41,40,40,40,39,38,37,35,33,31,29,28,26,25,23,22,22,21,21,20,20,20,21,23,27,32,39,46,55,62,68,71,73,73,71,69,66,62,59,55,52,49,46,45,43,43,42,42,42,41,40,40,39,37,35,33,32,30,28,27,26,25,24,23,23,22,22,23,24,27,32,39,45,54,61,67,71,73,73,72,70,67,63,60,56,53,50,48,46,45,44,43,43,42,42,41,40,40,38,37,35,33,31,30,28,27,26,25,24,23,23,24,26,29,35,40,48,55,61,65,68,68,67,65,62,58,54,50,47,44,41,40,39,38,38,38,38,38,38,37,36,34,33,31,29,27,26,24,23,22,21,21,21,21,21,21,22,25,29,34,40,48,55,61,66,68,68,67,64,61,58,54,50,47,44,42,41,40,40,40,40,41,41,40,40,39,38,36,34,33,31,29,28,27,26,25,25,24,24,23,24,25,28,33,40,46,54,61,67,70,72,71,69,66,63,59,55,51,48,45,43,42,41,40,40,40,40,40,39,38,37,35,34,32,30,28,27,25,24,23,22,21,20,20,20,19,20,22,26,32,39,47,55,62,67,71,72,71,69,66,62,58,54,51,47,44,42,41,40,40,40,40,40,39,39,38,37,35,33,32,30,28,26,25,23,22,21,21,20,20,19,19,19,19,20,23,27,33,40,48,56,63,68,70,71,70,67,64,60,56,52,48,45,42,40,40,39,39,39,39,39,38,38,37,36,34,32,31,29,27,26,24,23,22,21,20,20,19,19,19,19,19,19,20,22,26,32,39,46,54,61,66,69,70,70,67,64,60,56,52,48,45,42,40,40,39,39,39,39,39,39,38,38,36,35,33,32,30,28,26,25,23,22,21,20,19,19,19,18,18,18,18,19,20,23,28,35,42,50,58,64,68,70,70,68,65,62,58,54,50,46,43,40,40,39,39,39,39,39,39,39,39,38,36,35,33,32,30,28,27,25,24,23,22,21,21,20,20,20,20,20,22,25,29,36,43,51,59,65,70,72,72,71,68,65,61,57,53,49,46,43,42,41,41,41,41,42,42,41,41,40,39,38,36,34,33,31,29,28,26,25,24,24,23,23,22,23,24,28,33,39,47,55,63,70,74,77,77,76,73,70,66,61,57,54,51,48,46,45,45,45,45,45,45,44,44,43,41,40,39,37,35,33,32,30,29,28,27,27,26,26,26,27,29,33,39,45,53,61,68,73,76,76,75,73,70,66,63,59,55,52,49,47,46,45,45,45,45,45,44,44,42,41,40,39,37,35,33,32,31,29,28,28,27,27,26,26,27,29,33,39,45,53,61,67,72,74,75,74,71,68,64,61,57,53,50,48,46,45,44,44,43,43,43,42,41,40,40,38,36,34,33,31,29,28,27,26,25,25,24,24,24,24,25,28,32,38,45,53,61,68,72,74,74,73,70,67,63,59,55,52,49,46,45,43,43,43,42,42,42,41,40,40,38,37,35,33,31,30,29,27,26,25,25,25,24,24,24,24,24,25,27,31,37,43,51,59,66,71,73,74,73,70,67,63,60,56,52,49,47,46,44,44,44,44,43,43,42,41,40,39,37,35,34,32,30,29,28,27,26,25,25,24,24,24,24,23,24,25,27,32,38,45,54,62,69,73,76,76,75,73,69,66,62,58,55,52,49,47,46,45,44,44,43,43,42,41,40,39,37,35,34,32,30,28,27,26,25,24,24,24,24,23,23,23,23,23,22,22,23,26,30,37,44,52,60,67,71,74,74,72,69,66,62,58,54,51,48,45,43,42,41,40,40,40,40,40,39,37,35,34,32,30,28,26,25,23,22,21,20,19,19,19,19,19,19,19,19,18,18,18,17,18,21,25,31,39,47,56,63,68,71,71,70,68,64,60,56,52,49,45,43,41,40,40,39,39,39,39,38,38,36,35,34,32,30,28,27,25,24,23,22,21,21,21,21,21,21,21,21,21,21,21,21,23,27,32,40,47,55,61,66,69,70,69,66,63,59,55,51,47,44,41,40,39,38,38,38,38,38,37,37,36,34,33,31,29,27,26,24,23,21,20,19,19,18,18,18,18,18,18,18,18,18,18,20,23,28,34,41,50,58,64,68,70,71,69,66,63,59,55,52,48,45,43,41,40,40,39,39,39,39,38,37,36,35,33,32,30,28,26,25,23,22,21,20,19,19,19,19,19,19,19,18,18,19,21,24,30,36,43,51,59,64,67,68,68,66,63,59,55,51,47,44,41,40,38,37,37,37,37,37,37,36,35,34,33,31,30,28,26,24,23,21,20,19,18,18,17,17,17,17,17,17,17,18,20,24,29,37,44,52,58,63,66,66,66,63,60,57,53,49,46,43,40,39,38,38,38,38,39,39,39,38,37,36,35,34,32,31,29,28,26,25,24,23,23,22,22,21,21,21,22,24,27,32,38,44,52,58,63,65,66,65,63,60,57,54,50,47,44,41,40,39,38,38,38,38,38,38,37,36,35,34,32,31,29,28,26,25,23,22,22,21,21,20,20,20,20,20,22,24,29,34,40,48,55,60,64,66,66,65,62,60,57,53,50,47,45,43,41,40,40,40,40,40,40,40,39,38,37,35,34,32,31,29,28,26,25,24,24,23,23,23,22,22,22,23,24,27,31,37,43,50,57,62,65,66,65,64,62,59,56,53,50,47,45,43,42,41,40,40,40,40,40,40,39,38,37,35,34,32,30,29,27,26,25,24,24,23,23,23,23,22,22,22,23,25,29,34,40,46,54,59,63,66,66,65,63,61,58,55,52,49,47,45,43,42,42,42,42,42,42,41,40,40,39,38,36,35,33,32,30,29,28,27,27,26,26,26,26,26,26,26,26,29,32,38,43,50,57,62,66,68,68,67,65,62,59,56,53,51,48,47,46,45,45,45,44,44,44,43,42,41,40,38,37,35,34,32,31,30,29,28,27,27,27,26,26,26,26,26,26,28,32,37,43,50,58,64,69,71,72,72,70,68,65,62,59,57,54,51,49,48,47,46,46,45,45,44,43,42,40,40,38,36,34,33,31,30,29,28,27,26,26,26,25,25,25,25,25,24,25,26,29,33,40,46,54,61,66,70,71,71,69,67,64,61,58,55,52,49,47,46,45,44,44,43,43,42,41,40,40,38,37,35,33,32,30,29,27,26,26,25,25,24,24,24,24,24,24,24,23,23,22,22,22,24,27,32,39,46,54,61,67,70,71,70,68,66,62,59,55,52,49,46,44,43,42,42,41,41,41,40,40,39,38,36,34,32,31,29,28,26,25,24,23,22,22,22,21,21,21,21,21,21,21,21,20,21,22,26,31,38,45,53,60,66,69,70,69,68,65,61,58,54,51,48,45,43,42,42,42,42,42,42,42,41,40,40,38,37,35,33,32,30,29,27,26,25,25,24,24,24,24,24,23,23,23,23,23,24,27,32,38,45,53,61,66,70,72,72,71,68,64,61,57,53,50,47,45,43,42,41,41,41,41,41,40,40,39,38,36,34,32,31,29,27,26,25,24,23,22,22,22,22,22,22,22,22,22,22,24,27,32,39,46,55,63,69,73,74,74,73,70,66,63,59,55,52,49,46,44,43,43,42,42,42,42,41,40,40,39,37,35,33,31,30,28,27,25,24,23,23,23,22,22,22,23,23,23,25,28,34,40,47,55,62,68,71,72,72,70,67,63,59,55,51,48,45,43,41,40,40,40,40,40,40,39,38,37,35,33,31,30,28,26,24,23,22,21,20,19,19,18,18,18,18,20,23,28,35,42,50,57,63,66,67,67,65,62,59,55,51,47,44,41,40,39,38,38,38,39,39,39,38,38,37,35,34,33,31,29,28,27,26,25,24,23,23,23,23,23,25,28,33,39,45,53,59,65,68,69,68,66,64,60,56,53,49,46,43,42,40,40,40,40,40,40,40,40,39,38,37,35,34,32,30,29,28,27,26,25,25,24,24,24,24,25,28,32,38,45,52,60,66,70,72,72,71,68,65,62,59,56,53,51,48,47,46,45,45,44,44,44,43,42,41,40,39,38,36,34,33,32,31,30,29,28,28,28,28,27,28,29,32,37,42,50,57,63,68,71,72,72,70,68,65,62,59,56,53,51,49,48,47,46,46,45,45,44,43,42,41,40,39,37,36,34,33,32,31,30,29,29,28,28,28,28,27,27,27,29,32,36,42,49,56,63,68,70,71,71,70,67,64,61,58,55,52,50,48,46,45,45,44,44,43,42,41,40,40,38,36,35,33,31,30,29,28,27,26,26,25,25,25,25,25,25,24,24,24,23,23,23,24,27,32,38,45,53,60,66,69,71,70,69,66,63,60,57,53,50,48,46,45,44,44,43,43,43,42,41,40,40,39,37,35,34,33,31,30,29,28,28,27,27,26,26,26,26,26,26,25,25,24,24,24,25,28,33,40,46,54,61,66,70,71,70,69,66,63,60,56,53,50,47,45,44,43,42,42,42,41,41,40,40,38,37,35,34,32,30,29,28,27,26,25,24,24,24,23,23,23,23,23,23,23,22,22,21,21,21,21,23,27,33,40,48,56,63,68,70,71,70,68,65,62,58,55,52,49,46,44,43,42,41,41,41,40,40,40,38,37,35,33,32,30,28,26,25,23,22,21,21,20,20,20,19,19,19,19,19,19,18,18,18,18,19,23,28,35,42,50,57,62,65,66,66,64,62,58,55,51,48,45,42,40,40,39,38,38,38,38,37,37,36,35,34,32,31,29,28,26,25,24,23,22,21,21,21,21,20,20,20,20,20,20,20,19,20,22,25,30,37,44,52,58,63,67,68,67,65,62,59,55,52,48,45,43,41,40,40,39,39,40,39,39,39,38,37,35,34,32,31,29,27,26,25,24,23,22,22,21,21,21,21,21,21,21,21,21,22,24,28,33,40,47,55,62,67,70,71,70,68,65,62,58,55,51,48,46,44,43,42,42,41,41,41,41,40,40,39,38,36,35,33,31,30,28,27,26,25,25,24,24,24,24,24,24,24,24,24,26,30,36,42,50,58,65,69,72,73,72,70,67,64,60,56,53,50,47,46,44,44,43,43,43,43,43,42,41,40,39,37,36,34,33,31,30,29,28,27,27,26,26,26,25,25,25,26,27,31,36,42,49,57,64,69,72,73,72,70,68,64,61,57,53,50,47,45,44,43,42,42,42,42,41,40,40,39,37,36,34,32,31,29,28,27,26,25,25,25,25,24,24,24,24,26,29,34,40,47,55,62,68,71,72,71,69,66,63,59,55,52,49,46,44,42,42,41,41,41,41,41,40,40,39,37,36,34,33,31,30,29,28,27,26,26,26,25,25,25,25,27,30,35,41,49,57,64,69,73,74,73,71,68,65,61,57,54,50,48,46,44,43,42,42,42,41,41,40,40,39,37,35,34,32,31,29,28,27,26,25,25,25,25,25,25,24,24,25,26,29,34,40,49,57,65,71,75,76,76,74,72,68,65,61,58,54,52,49,47,46,45,44,44,43,42,41,40,40,38,37,35,33,31,30,29,27,26,26,25,25,25,25,25,25,24,24,24,23,23,24,27,32,38,46,54,63,69,74,76,76,74,72,69,65,61,58,54,51,49,47,45,44,43,43,42,42,41,40,39,37,36,34,32,30,29,27,26,25,25,24,24,23,23,23,23,23,23,22,22,22,21,21,20,21,23,28,34,42,51,59,67,71,74,74,73,70,67,63,59,55,51,48,45,43,42,41,40,40,40,40,40,39,37,36,34,33,31,29,27,26,24,23,22,22,21,21,21,21,21,21,21,21,21,20,20,20,21,23,28,34,41,50,58,65,70,73,73,72,69,65,61,57,53,50,47,45,43,42,42,42,42,42,41,41,40,39,38,36,34,32,31,29,28,26,25,24,23,23,23,22,22,22,22,22,22,22,21,22,23,26,31,38,45,55,63,70,74,76,76,74,71,67,63,59,55,52,48,46,44,42,41,41,41,40,40,40,39,38,36,35,33,31,29,27,25,24,23,22,21,21,20,20,20,20,20,20,20,20,20,20,22,26,32,40,47,56,64,70,73,74,73,71,68,64,60,55,52,48,45,43,41,40,40,40,40,40,40,39,38,37,36,34,32,30,28,27,25,24,23,22,21,20,20,20,20,20,20,20,20,20,21,24,28,35,42,51,59,66,71,73,73,72,69,65,61,57,52,48,45,42,40,40,39,39,39,39,39,39,38,37,35,34,32,30,29,27,25,24,22,21,20,20,19,19,19,19,19,19,19,20,22,26,32,39,47,55,63,68,71,72,71,69,65,62,57,53,49,46,43,41,40,40,40,40,40,40,40,40,40,38,37,35,34,32,30,29,28,27,26,25,25,24,24,24,24,24,26,29,34,40,47,55,63,69,73,75,75,73,70,66,62,58,54,51,48,46,44,43,43,43,43,43,43,42,41,40,40,38,36,34,33,31,30,29,28,27,26,26,26,26,26,26,27,30,35,41,49,58,66,72,77,79,79,78,75,72,69,65,62,58,56,53,51,50,49,48,47,47,46,45,44,43,41,40,38,37,35,33,32,31,30,29,28,28,28,27,27,27,27,29,32,37,43,51,59,67,72,76,77,76,74,72,69,65,62,58,55,52,50,48,46,46,45,44,44,43,42,41,40,39,37,35,34,32,30,29,28,27,26,26,25,25,25,25,25,25,24,24,25,26,30,36,42,50,58,65,70,73,74,73,70,68,64,61,57,54,51,48,46,44,43,43,42,42,41,40,40,39,37,36,34,32,31,29,28,26,25,25,24,23,23,23,23,23,23,23,23,23,22,22,21,22,23,26,31,39,46,55,63,68,72,74,73,71,69,65,62,58,55,52,49,47,45,44,44,44,43,43,43,42,41,40,39,37,35,34,32,31,30,29,28,27,26,26,26,25,25,25,25,25,24,24,24,24,24,27,31,38,44,53,61,67,71,73,74,72,70,67,63,60,56,53,50,47,45,44,43,42,42,42,41,40,40,39,37,36,34,32,31,29,28,27,26,25,24,23,23,23,23,23,22,22,22,22,22,22,21,21,21,21,23,27,34,41,50,58,66,72,75,76,75,73,70,66,62,59,55,52,49,47,45,44,43,43,43,42,41,41,40,39,37,35,34,32,30,28,27,26,25,24,23,23,22,22,22,22,22,22,22,22,21,21,21,21,22,26,31,39,46,55,63,69,73,74,73,71,68,65,61,57,53,49,47,44,42,41,41,41,40,40,40,40,39,38,36,34,32,30,28,27,25,24,22,22,21,20,20,20,19,19,19,19,19,19,19,18,18,18,18,21,25,32,40,48,57,65,70,73,74,72,70,66,62,58,54,50,47,44,42,40,40,40,40,40,40,40,39,38,37,35,33,32,30,28,27,25,24,23,22,21,21,20,20,20,20,21,21,21,21,21,22,24,28,35,41,50,58,65,70,73,73,72,69,65,61,57,52,48,45,42,40,40,39,39,39,39,39,39,38,37,36,34,33,31,29,27,25,24,23,21,20,20,19,19,19,19,19,19,18,18,19,20,23,28,35,43,52,61,68,73,76,76,74,72,68,64,60,56,52,49,46,43,42,41,40,40,40,40,40,40,39,37,36,34,32,30,29,27,25,24,22,21,21,20,20,20,20,19,19,19,19,21,24,29,35,43,52,60,67,72,74,74,73,70,66,62,58,54,50,47,44,42,41,40,40,40,40,40,40,39,38,37,35,34,32,30,28,27,25,24,23,22,21,21,21,21,20,20,20,21,23,27,33,40,48,56,64,70,73,74,73,71,68,64,60,55,51,48,45,43,41,40,40,40,40,40,40,40,39,38,36,35,33,31,29,27,26,24,23,22,22,21,21,21,21,21,21,21,22,25,29,35,42,51,60,67,72,74,75,73,70,67,63,58,54,50,47,44,42,41,41,41,41,41,41,41,40,40,38,37,35,33,32,30,29,27,26,25,24,24,24,24,24,24,24,24,26,28,33,39,46,55,63,69,73,75,75,73,70,67,62,58,54,50,47,44,43,42,41,41,41,41,40,40,40,38,37,35,33,32,30,28,27,25,24,23,23,22,22,22,22,22,22,22,24,27,33,40,48,57,66,72,76,78,78,76,73,70,66,62,58,54,51,48,46,45,44,43,43,42,42,41,40,39,38,36,34,32,31,29,27,26,25,24,23,23,22,22,22,22,22,22,22,23,25,30,36,43,52,61,69,74,77,77,76,73,69,65,61,57,53,50,47,45,44,43,42,42,42,41,40,40,39,38,36,34,33,31,29,27,26,25,24,23,22,22,22,22,22,22,22,22,21,21,21,23,26,32,39,47,56,65,71,75,76,76,74,70,66,62,58,54,50,47,44,43,41,41,40,40,40,40,39,38,37,35,34,32,30,28,26,25,23,22,21,20,20,19,19,19,19,18,18,18,18,18,18,20,23,28,35,42,52,60,67,72,75,75,74,71,68,63,59,54,50,47,44,42,40,40,39,38,38,37,37,36,34,33,31,30,28,27,26,25,25,26,27,28,30,31,32,33,34,35,35,35,36,38,40,45,51,59,68,76,83,88,91,93,93,92,90,88,85,82,80,79,78,77,76,76,76,75,73,71,69,53,51,49,47,45,42,40,39,38,36,36,35,34,34,33,32,32,31,31,30,30,31,32,34,38,40,44,48,51,52,53,53,52,61,57,53,50,46,43,40,38,37,36,35,35,35,34,34,34,34,33,32,31,30,28,26,25,24,22,21,20,20,19,19,18,18,17,17,17,19,22,27,33,40,48,55,61,65,66,66,64,62,58,55,51,48,45,42,40,39,38,37,37,37,36,36,35,35,33,32,30,29,27,25,23,22,21,20,19,18,18,17,17,17,17,16,16,17,20,24,30,37,44,51,57,61,63,64,62,60,57,54,51,47,44,41,40,39,38,37,37,37,37,37,37,36,36,34,33,32,30,29,27,26,25,24,23,23,23,22,22,22,22,22,23,24,26,30,36,41,48,54,59,63,64,64,62,60,57,54,51,48,46,44,42,41,40,40,40,40,40,40,39,38,37,36,35,33,32,31,29,28,27,26,26,25,25,25,24,24,24,24,24,24,25,28,32,38,44,51,57,61,64,65,65,64,62,60,57,55,52,50,48,46,44,44,43,42,42,41,41,40,40,39,38,37,35,34,33,32,30,29,29,28,27,27,26,26,26,26,26,26,25,25,25,26,28,33,38,43,50,56,60,63,64,63,62,60,58,55,53,50,48,46,44,43,42,42,42,41,41,40,40,40,39,37,36,35,33,32,31,30,29,28,27,27,26,26,26,25,25,25,25,25,24,24,24,24,25,28,32,37,43,50,56,60,63,64,63,62,60,57,55,52,50,47,45,44,43,42,42,42,42,42,41,41,40,40,39,38,37,35,34,33,32,31,31,30,30,29,29,29,29,29,28,28,28,28,27,27,28,30,33,38,43,50,56,61,65,66,66,65,63,61,58,55,52,50,48,46,45,44,44,44,43,43,43,42,42,41,40,39,38,36,35,34,32,31,30,30,29,29,28,28,28,28,28,27,27,27,27,26,27,28,31,36,41,48,55,61,66,68,69,69,67,65,62,60,57,54,51,49,48,46,45,45,45,44,44,44,43,42,41,40,39,38,36,35,34,32,31,30,29,29,28,28,28,28,27,27,27,27,26,26,26,27,30,34,40,45,52,59,64,67,68,68,67,64,62,59,55,52,49,47,45,43,42,41,40,40,40,40,39,39,38,36,35,34,32,31,30,28,27,26,26,25,25,25,25,25,25,25,25,24,24,24,23,23,25,28,32,38,45,52,59,64,68,69,69,67,65,62,59,56,52,50,47,45,44,43,42,42,42,41,41,40,40,39,38,36,35,34,32,31,30,29,28,27,26,26,25,25,25,25,24,24,24,23,23,22,23,26,30,36,42,50,57,63,66,68,68,66,64,61,57,54,51,47,45,43,41,41,40,40,40,40,40,40,39,38,37,36,34,32,31,29,28,27,26,24,24,23,23,22,22,22,21,21,21,21,21,23,27,33,40,47,54,61,65,68,68,67,65,63,59,56,53,50,47,45,43,41,41,40,40,40,40,40,39,38,37,35,34,32,31,29,28,27,26,25,24,23,23,22,22,21,21,20,20,19,18,17,17,19,22,27,33,40,48,56,62,65,67,67,66,64,61,58,55,52,49,46,44,43,41,41,41,40,40,40,40,40,39,38,37,35,34,32,30,27,25,23,22,21,20,19,19,18,18,18,17,17,16,16,15,15,17,20,25,31,39,46,54,60,64,66,66,64,62,59,55,51,48,45,42,40,39,38,37,36,36,35,34,34,33,31,30,29,27,26,24,23,21,20,19,19,18,18,18,18,18,18,19,19,19,19,18,18,18,19,22,27,34,42,50,58,64,68,70,70,68,65,62,58,54,51,47,44,42,40,40,40,40,40,40,40,39,38,37,36,35,33,32,30,29,27,26,25,25,25,25,25,26,27,28,29,30,31,31,32,34,37,40,47,54,62,70,76,79,81,81,79,76,72,68,63,59,54,51,48,45,44,43,42,41,41,40,40,39,37,35,34,32,30,27,26,24,22,21,20,18,17,16,16,15,14,14,14,13,13,14,16,20,26,34,42,52,60,67,72,74,75,74,71,68,65,61,57,54,51,48,46,44,43,43,42,42,41,41,40,40,38,37,35,33,32,30,28,26,25,23,22,22,21,21,21,21,21,21,21,21,23,26,31,38,45,53,62,68,73,76,76,75,72,69,66,62,58,54,51,49,46,45,44,43,42,42,41,41,40,39,38,36,34,32,29,27,26,24,23,22,21,21,21,21,22,22,22,23,23,23,24,26,30,36,42,51,60,68,73,77,78,78,76,73,69,65,61,56,53,50,47,45,44,43,43,43,42,42,41,40,40,38,37,35,33,31,30,28,27,26,25,24,23,23,23,23,23,22,22,23,24,27,31,38,45,53,60,66,70,72,72,71,68,65,61,58,54,51,48,46,44,43,43,43,43,43,43,42,41,40,39,38,36,34,32,31,29,28,27,26,25,24,24,23,23,23,23,23,26,30,36,43,51,60,67,73,76,77,77,75,72,68,65,61,57,54,51,48,46,45,45,44,44,43,43,42,41,40,39,37,36,34,32,30,29,27,26,25,25,24,24,24,24,24,24,24,25,28,32,39,46,54,63,70,75,77,78,76,74,71,67,64,60,56,53,50,48,47,46,46,45,45,45,45,44,43,42,40,39,37,35,33,32,30,29,28,27,26,26,26,25,25,25,25,25,25,27,30,35,41,49,58,65,71,75,76,76,74,70,66,62,58,54,51,48,46,44,44,43,43,44,44,44,44,43,43,42,41,40,39,37,35,34,33,31,30,29,28,28,27,26,26,25,25,24,24,23,24,27,32,39,47,56,65,73,78,82,84,84,82,80,78,75,71,68,65,62,60,58,57,55,54,53,52,51,49,47,45,42,40,39,37,35,33,31,30,29,28,27,26,26,25,25,25,24,24,23,23,24,27,32,38,45,53,61,67,71,73,74,72,71,68,65,62,60,57,56,54,53,53,53,53,52,52,51,50,48,46,44,42,40,38,36,34,32,30,28,27,25,24,23,22,22,21,21,21,21,21,24,28,34,40,48,56,64,69,72,74,73,72,69,66,62,58,54,50,47,44,42,40,40,39,39,39,39,39,38,37,36,35,34,32,31,29,28,27,26,25,24,24,24,24,24,24,23,23,23,24,27,31,37,44,52,60,66,70,73,73,72,69,66,63,59,55,52,49,46,44,42,41,40,40,39,39,38,37,35,34,32,30,28,26,24,22,20,19,18,17,17,17,17,18,18,18,18,18,19,22,26,32,40,47,55,62,67,70,71,70,67,64,61,57,53,49,46,43,41,40,40,40,40,40,39,39,38,38,36,35,33,32,30,28,27,26,24,23,22,22,21,21,21,21,21,20,21,22,25,30,37,44,52,59,65,68,70,70,68,65,62,59,55,52,49,46,44,43,42,42,42,41,41,41,40,40,38,37,35,33,32,30,28,27,25,24,24,23,23,22,22,22,22,21,21,22,25,30,36,42,50,57,63,67,69,69,68,66,63,60,57,54,50,48,45,44,42,41,41,40,40,40,39,38,37,35,34,32,30,29,27,26,25,24,23,22,22,21,21,21,20,20,20,20,19,19,19,20,23,28,34,40,48,54,59,62,64,64,62,60,58,55,52,49,47,44,43,41,40,40,40,40,40,39,39,38,37,35,34,32,31,29,28,27,25,25,24,23,23,22,22,21,21,21,21,20,20,20,19,19,19,19,20,24,28,35,41,48,54,59,61,62,62,61,59,56,53,51,48,46,44,42,41,40,40,40,40,40,40,40,39,38,36,35,33,32,30,29,27,26,25,24,24,23,22,22,21,21,21,21,20,20,20,19,19,18,18,18,21,25,30,37,43,50,55,59,61,61,61,59,57,54,51,48,46,43,41,40,40,40,40,40,40,39,39,38,38,36,35,34,32,31,29,28,27,26,25,24,23,23,23,22,22,22,22,22,22,22,22,22,22,23,25,29,34,40,47,53,58,62,63,63,62,60,58,55,52,49,46,44,42,41,40,40,40,40,40,40,40,40,39,38,36,35,33,32,30,29,27,26,25,24,24,23,23,22,22,22,22,21,21,21,21,21,24,28,34,40,48,55,62,66,69,70,69,68,66,63,60,57,54,52,49,47,46,45,45,45,45,44,44,44,43,42,40,40,38,36,35,33,31,30,28,27,26,26,25,25,25,24,24,24,24,23,24,25,29,34,40,47,54,61,66,69,70,70,69,66,64,61,57,54,51,49,47,45,44,44,44,44,43,43,43,42,41,40,39,37,36,34,32,31,29,28,27,26,26,25,25,25,25,24,24,24,24,26,29,34,40,47,54,61,66,69,71,71,69,67,64,61,57,54,51,49,47,45,44,44,43,43,43,43,42,41,40,40,38,37,35,33,32,30,29,28,27,26,26,25,25,25,25,24,24,25,28,32,38,44,51,59,65,69,71,72,71,69,66,63,59,56,53,50,47,46,45,44,44,44,44,44,43,42,41,40,40,38,37,35,34,33,32,31,30,29,29,29,28,28,28,28,29,31,35,40,47,54,61,67,71,72,72,71,69,66,63,59,56,53,50,48,46,45,45,44,44,44,43,43,42,40,40,38,37,35,34,32,31,30,29,28,27,27,27,26,26,26,26,26,28,31,37,43,51,59,65,71,74,75,74,73,70,67,64,61,57,54,52,49,47,46,45,45,45,44,44,43,42,40,40,38,36,35,33,31,30,29,28,27,26,26,26,26,26,25,25,25,25,25,26,28,33,39,46,54,62,67,71,73,73,71,69,66,62,59,56,52,50,47,46,44,44,43,43,43,42,41,40,40,38,36,35,33,31,30,28,27,26,25,24,24,23,23,23,22,22,22,22,22,21,21,20,21,23,28,34,41,49,57,64,69,71,71,70,68,65,61,58,54,51,48,46,44,42,42,41,41,40,40,40,40,39,37,36,35,33,31,30,29,28,27,26,25,25,25,24,24,24,25,25,25,25,24,24,24,24,24,27,31,37,44,52,59,65,69,71,71,70,67,64,60,57,53,50,46,44,42,41,40,40,40,40,40,39,38,37,35,34,32,30,29,27,26,25,24,23,23,22,22,21,21,21,21,21,21,21,21,20,20,20,20,23,27,34,41,49,58,65,70,73,74,73,70,67,64,61,57,54,51,48,46,44,43,43,42,42,42,41,41,40,39,38,36,35,33,32,30,28,27,25,24,23,22,22,22,21,21,21,21,21,21,20,20,21,23,27,32,40,47,56,63,68,71,72,71,69,66,62,59,55,51,48,45,43,41,40,40,40,40,40,40,40,39,38,36,34,33,31,29,28,26,24,23,22,21,20,20,20,19,19,19,20,19,19,19,19,21,24,30,37,44,53,62,68,73,75,75,74,72,68,64,61,57,53,50,47,45,43,42,41,40,40,40,40,39,38,36,35,33,31,29,27,25,24,22,21,21,20,20,20,20,20,20,20,19,19,21,24,29,36,43,52,59,65,69,71,71,69,67,64,60,57,53,50,48,46,45,45,45,45,46,46,46,46,45,44,43,41,40,38,36,34,32,31,30,29,28,27,26,26,25,25,24,24,23,24,26,30,35,42,50,58,65,70,72,73,73,71,67,63,59,53,48,43,40,36,33,30,28,26,25,24,24,24,23,23,22,21,20,18,17,15,14,12,11,10,9,8,7,6,6,5,5,5,7,11,17,24,34,42,50,56,60,61,62,60,58,56,53,49,46,43,41,40,38,37,37,37,37,37,36,36,35,34,32,31,29,27,25,23,22,20,19,18,17,17,17,18,18,19,21,23,26,31,38,45,54,63,71,77,81,82,82,80,78,74,71,67,63,60,57,55,53,52,52,51,51,51,51,51,50,49,47,45,42,40,36,32,28,24,20,16,12,9,6,3,0,0,0,0,0,0,0,0]
test = [247,46,42,40,60,60,60,62,60,60,56,62,48,44,42,48,83,130,176,198,211,213,204,188,169,149,130,114,101,89,81,75,70,68,68,70,70,70,70,68,68,68,66,64,62,58,56,54,52,54,62,77,101,130,159,182,182,198,204,202,192,198,145,130,114,101,89,79,68,66,68,70,68,64,62,58,56,54,54,50,52,54,64,81,108,138,165,188,202,204,200,188,175,159,141,126,112,99,89,81,77,71,70,68,68,68,68,68,66,66,64,68,54,52,50,46,44,42,42,46,56,73,97,141,186,196,190,178,145,114,99,87,77,71,68,66,66,66,66,64,64,62,62,60,58,56,54,52,50,48,44,44,42,46,54,71,95,126,153,175,188,192,186,175,161,145,128,110,95,81,71,64,60,58,58,60,60,62,62,62,60,56,52,52,44,42,40,46,60,77,103,130,157,176,188,190,182,171,157,140,122,106,91,79,71,66,64,62,64,64,66,68,68,66,64,64,62,60,60,58,58,56,54,54,58,68,85,110,138,167,188,200,200,194,180,165,145,126,91,66,52,50,50,54,56,56,56,56,56,52,50,48,46,42,42,42,42,44,52,66,87,114,141,167,186,194,192,186,175,161,143,128,112,99,87,77,71,68,66,66,68,68,68,70,70,68,66,64,62,60,58,56,54,50,46,50,77,130,178,192,194,186,176,163,149,132,118,105,93,85,79,75,75,75,75,75,75,75,75,73,71,70,68,66,64,62,58,58,56,52,52,54,62,77,101,128,155,176,190,196,194,186,175,159,143,126,112,99,89,79,73,73,75,71,70,68,68,68,68,66,64,62,60,58,58,56,58,66,77,99,124,153,180,200,210,211,202,190,173,155,138,120,105,93,85,79,77,75,75,75,77,77,77,77,75,71,70,68,66,62,60,56,52,50,48,50,64,108,175,200,227,225,210,186,169,151,134,118,105,95,87,81,79,77,77,77,77,75,75,73,71,68,66,62,60,58,56,54,52,50,48,52,64,83,112,145,180,208,223,229,227,215,202,184,167,149,134,118,106,95,87,83,79,77,77,75,68,66,58,58,56,54,52,52,48,48,48,56,71,95,128,163,192,215,227,223,211,196,176,157,141,128,114,105,97,91,87,85,83,81,83,83,83,81,81,79,77,75,73,71,68,66,64,62,62,62,60,60,60,77,118,143,186,196,192,176,163,147,134,120,108,99,91,85,81,81,79,79,79,79,79,79,77,75,73,71,68,66,64,60,58,58,56,56,56,60,70,85,106,132,157,176,188,192,188,180,167,153,140,126,112,103,95,91,87,85,83,83,81,75,71,66,64,60,58,56,56,54,56,58,62,73,91,116,141,167,186,196,200,194,188,176,165,149,136,122,110,101,95,89,85,83,81,79,81,79,77,77,75,73,71,70,68,66,62,60,58,56,52,54,58,87,143,171,210,213,204,184,171,155,140,124,112,103,95,91,89,89,89,89,87,85,83,81,79,77,75,71,70,66,64,62,60,58,56,60,68,83,106,134,163,186,204,210,210,202,190,176,163,147,132,118,106,99,93,89,85,83,81,79,75,73,68,64,62,60,58,56,54,52,52,56,64,81,105,134,163,188,206,211,211,204,192,178,165,147,134,120,108,101,97,93,91,91,91,91,89,89,87,85,83,81,79,75,73,70,68,66,64,64,64,64,66,81,116,159,184,184,171,155,141,130,120,110,103,97,93,91,91,91,91,91,91,89,89,85,83,79,77,73,73,71,70,68,66,66,64,68,75,89,108,132,155,173,186,192,192,186,176,165,151,138,126,116,108,101,97,93,91,89,85,83,77,73,71,68,68,64,62,62,60,58,60,64,77,95,118,145,169,186,194,196,192,184,173,161,149,136,124,112,105,99,95,91,91,89,89,89,87,87,85,81,79,77,75,71,70,68,64,62,62,60,58,58,62,79,124,169,190,192,176,159,145,134,120,108,103,97,91,89,87,85,85,83,83,81,79,77,75,73,71,70,66,64,64,62,60,58,56,56,58,66,77,97,122,145,167,178,186,184,178,169,157,143,130,116,105,97,91,85,83,79,79,79,77,73,70,64,62,58,56,56,56,54,54,54,56,60,71,91,112,136,157,171,176,176,171,161,149,136,124,110,101,91,85,79,75,71,70,68,66,68,68,68,66,64,62,60,56,52,50,48,46,42,42,40,40,52,91,149,196,206,198,178,163,147,130,114,103,91,83,77,73,71,71,71,71,70,70,68,66,64,62,58,54,52,48,46,42,42,42,42,46,56,73,97,128,157,182,198,206,204,196,182,169,153,138,122,108,95,87,79,75,73,71,71,70,64,56,52,50,48,46,44,42,40,38,42,54,73,99,130,159,182,198,202,200,190,176,161,145,128,114,101,89,81,73,70,66,66,66,66,66,66,66,64,62,62,60,56,54,52,50,46,46,46,50,64,83,124,178,194,200,192,165,134,116,103,93,85,77,75,71,71,70,70,70,70,70,68,68,64,60,56,54,50,48,46,44,44,52,66,89,118,147,176,196,208,210,204,194,180,165,149,134,118,105,95,85,81,79,77,77,75,75,73,70,66,62,54,48,44,44,50,60,79,106,136,165,188,204,210,208,200,186,171,153,138,120,106,95,85,79,75,71,71,71,70,70,70,68,68,66,62,60,56,54,52,48,46,44,46,54,70,93,122,153,178,196,206,206,192,163,128,99,77,70,66,66,66,66,66,66,66,64,60,58,54,50,48,44,42,40,42,50,66,87,114,145,169,186,196,194,188,176,161,143,128,110,95,83,75,70,66,64,64,64,66,66,66,64,62,62,60,58,56,54,50,48,54,85,141,186,200,198,188,176,161,145,128,112,99,87,77,71,68,66,66,66,68,68,66,66,64,60,58,54,52,48,46,44,44,54,70,93,124,155,182,200,210,208,202,190,175,159,140,122,106,95,83,77,71,70,66,64,62,58,54,48,44,42,40,40,50,66,91,122,155,182,202,210,210,200,186,171,153,136,118,103,91,81,73,68,64,62,62,62,64,64,62,60,58,56,54,50,48,44,40,38,40,52,73,101,134,165,190,206,211,206,178,143,124,95,73,64,62,62,62,62,64,64,62,60,58,56,52,50,46,44,42,42,50,66,89,118,151,178,196,206,206,196,182,167,149,130,112,99,85,75,70,66,64,64,64,66,66,68,66,64,62,60,56,52,50,48,48,64,110,175,198,217,206,194,178,161,143,126,110,97,87,79,77,75,73,73,73,73,71,71,68,66,64,60,58,54,52,52,58,73,97,128,163,194,217,231,233,227,215,202,184,165,145,128,112,103,93,89,85,83,81,81,79,75,70,60,54,48,50,60,77,105,138,175,204,225,235,237,229,217,200,182,163,145,128,114,105,95,91,87,85,83,83,81,81,77,75,71,70,66,60,56,52,50,48,52,64,85,114,149,182,204,211,208,198,182,169,157,140,116,103,93,89,87,85,85,83,81,81,79,77,73,71,70,68,66,64,66,73,85,105,126,149,167,178,182,180,175,165,153,141,130,118,106,99,93,89,87,87,85,85,85,85,85,83,81,79,77,75,73,70,68,66,66,66,81,118,157,178,175,167,157,145,134,122,112,103,97,93,89,87,87,87,87,85,85,83,79,77,75,73,71,70,68,66,64,66,70,79,97,118,141,161,176,184,186,182,175,165,153,141,130,118,108,99,93,89,85,83,83,81,81,79,75,73,68,62,58,54,54,56,60,70,85,108,134,161,180,192,198,194,188,176,163,149,136,122,110,101,93,87,83,79,79,77,77,77,75,75,71,70,68,66,64,62,58,54,52,52,54,62,77,99,124,149,171,186,190,184,159,132,105,91,81,77,77,77,77,77,77,75,75,73,71,70,68,64,62,58,56,54,54,56,64,77,99,124,147,167,178,182,180,173,161,147,134,120,108,97,89,81,77,75,73,73,73,73,73,73,71,70,68,64,58,54,48,46,58,101,147,173,188,198,198,192,180,167,151,136,120,106,95,87,79,75,73,73,73,75,75,73,71,70,66,64,62,58,54,52,50,48,52,62,79,105,136,165,188,204,210,208,198,184,169,153,136,120,106,95,83,77,77,75,73,71,68,64,60,58,54,52,50,48,50,60,75,101,130,159,182,200,206,204,196,184,169,153,136,120,106,93,85,79,75,73,71,71,70,70,70,70,68,66,64,60,56,52,50,48,46,50,60,79,105,136,165,186,202,196,173,141,112,95,85,81,79,75,75,73,73,73,73,71,71,68,66,64,60,58,54,50,48,48,50,60,77,101,128,153,175,188,194,190,182,169,155,140,124,110,97,87,79,73,71,70,70,71,71,70,68,66,64,60,56,52,46,44,50,71,95,122,149,171,182,188,184,175,163,147,132,116,101,89,81,73,70,68,68,68,68,70,68,68,68,66,62,60,58,56,52,50,48,46,46,54,68,87,114,141,165,182,190,190,184,173,159,143,130,106,85,71,66,64,64,60,60,58,58,56,54,52,48,44,40,38,36,36,40,54,75,105,138,167,190,202,204,198,188,175,157,141,124,108,93,81,73,68,64,64,64,64,64,64,62,60,58,56,52,50,48,46,44,40,38,35,42,77,138,190,202,196,182,167,151,134,114,101,87,75,68,62,58,58,58,60,60,60,60,58,56,54,50,48,44,42,38,35,33,31,29,31,38,52,75,105,136,165,186,196,196,190,178,163,145,128,112,97,85,73,68,60,60,60,60,60,56,54,54,52,50,50,48,46,46,44,48,56,70,91,116,143,163,176,180,178,171,159,143,130,114,101,89,79,71,68,66,64,64,66,66,68,68,66,64,62,60,58,56,54,52,50,48,46,44,48,54,89,141,180,186,178,161,140,126,110,97,87,79,73,70,68,68,68,68,68,68,68,66,66,64,60,58,56,52,50,50,48,46,48,54,66,85,110,138,163,180,188,188,182,171,157,141,128,112,101,89,81,73,70,68,66,66,68,66,64,62,58,56,50,46,44,42,42,52,66,89,116,147,173,190,196,196,186,175,161,145,130,114,101,89,81,75,71,70,70,70,71,73,71,71,68,66,64,62,60,58,54,52,48,46,46,50,62,79,105,132,159,178,190,186,175,143,114,89,77,73,70,70,71,71,71,71,71,71,70,68,66,64,62,58,56,54,54,56,62,73,93,120,147,173,192,200,202,194,184,171,155,138,122,108,97,87,81,77,75,73,73,73,73,73,71,71,70,66,64,58,52,54,62,105,147,175,196,208,210,206,196,182,167,149,132,118,105,93,87,81,75,75,75,73,75,75,73,71,70,68,66,62,60,56,52,50,48,48,54,66,87,114,145,173,196,208,211,208,196,182,167,149,134,118,99,81,77,75,75,75,71,70,68,64,60,58,56,54,52,48,46,46,50,60,79,105,136,165,190,206,211,138,122,108,97,87,81,79,77,75,77,77,77,75,75,73,70,66,64,60,58,56,54,52,50,50,54,87,141,169,202,204,198,186,171,153,136,120,106,93,85,79,75,73,73,73,73,73,73,71,70,68,64,62,60,56,54,52,50,48,48,54,64,83,108,138,165,186,200,202,196,186,173,157,141,126,110,97,87,81,77,75,73,73,70,68,62,56,52,50,46,44,44,46,54,70,93,122,153,178,194,202,202,194,180,165,147,130,114,101,89,79,73,70,66,66,64,64,64,64,64,62,62,60,58,54,52,48,46,44,46,52,66,87,114,143,171,194,194,184,155,122,91,77,70,66,66,64,66,66,68,66,66,64,62,58,56,52,48,46,44,44,48,58,77,105,136,167,190,206,208,204,192,178,161,141,124,106,91,79,71,66,64,64,64,66,68,68,68,66,64,62,58,52,46,48,73,130,176,202,208,204,192,178,163,145,126,110,97,85,77,71,68,66,64,64,66,66,66,66,64,60,58,54,50,46,44,44,52,66,89,118,149,176,192,200,198,188,173,157,138,120,103,87,75,66,60,56,54,56,60,60,56,52,46,46,46,50,62,81,106,138,165,186,196,196,188,176,161,143,126,108,91,77,68,62,58,56,58,58,60,60,60,60,58,56,52,48,46,42,40,40,46,64,87,120,153,182,200,210,208,198,184,165,145,108,77,60,54,52,54,54,54,56,54,52,50,48,44,40,36,36,40,52,73,105,140,171,194,206,206,198,184,167,147,128,108,91,77,66,58,52,48,48,50,50,52,52,52,52,50,48,46,42,38,35,33,31,35,46,66,126,180,194,188,175,138,106,89,75,64,54,48,44,42]
import random


def getPeakArroundMe(peakIndex,listOfPeaks,wave):
    if (peakIndex > 0):
        leftSide = wave[listOfPeaks[peakIndex-1]:listOfPeaks[peakIndex]]
        rightSide = wave[listOfPeaks[peakIndex]:listOfPeaks[peakIndex+1]]
        rightMinIndex = rightSide.index(min(rightSide))
        leftMinIndex = leftSide.index(min(leftSide))
        return(leftSide[leftMinIndex:-1]+rightSide[:rightMinIndex])
    elif(peakIndex == 0):
        leftSide = wave[0:listOfPeaks[0]]
        rightSide = wave[listOfPeaks[peakIndex]:listOfPeaks[peakIndex+1]]
        rightMinIndex = rightSide.index(min(rightSide))
        leftMinIndex = leftSide.index(min(leftSide))
        return(leftSide[:-1]+rightSide[:rightMinIndex])

peaks, _ = find_peaks(test, height=125)

def getRandomPeak(data,pos=-1):
    peaks, _ = find_peaks(test, height=125)
    if pos < 0:
        index = random.randint(1,len(peaks)-2)
        return getPeakArroundMe(index, peaks, data)
    else:
        return getPeakArroundMe(pos, peaks, data)

for i in range(20):
    index = random.randint(1,len(peaks)-2)
    wavelette = getPeakArroundMe(index, peaks, test)
    peak_index = wavelette.index(max(wavelette))
    sub_list = wavelette
    y_spl = UnivariateSpline(range(len(sub_list)),sub_list,s=10,k=5)
    index_max = np.argmax(sub_list)
    x = range(len(sub_list))
    y = sub_list
    x_range = np.linspace(x[0],x[-1],500)
    print(len(y_spl(x_range)[1:]))
    listOfWavelett = [y_spl(x_range)]
    fiducial = getFiducials(y_spl(x_range))
    showResultsWave(y_spl(x_range),fiducial)
    # plt.axvline(x=peak_index)
    # plt.semilogy(x_range,)
    # plt.semilogy(x,y,'ro',label = 'data')
    # plt.show()
"""       

